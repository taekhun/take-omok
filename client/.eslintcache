[{"/Users/taekhun/Desktop/Dev/React/take-omok/client/src/index.js":"1","/Users/taekhun/Desktop/Dev/React/take-omok/client/src/App.js":"2","/Users/taekhun/Desktop/Dev/React/take-omok/client/src/components/Home/Home.js":"3","/Users/taekhun/Desktop/Dev/React/take-omok/client/src/components/Play/Play.js":"4","/Users/taekhun/Desktop/Dev/React/take-omok/client/src/components/Board/Board.js":"5","/Users/taekhun/Desktop/Dev/React/take-omok/client/src/components/Input/Input.js":"6","/Users/taekhun/Desktop/Dev/React/take-omok/client/src/components/Messages/Messages.js":"7","/Users/taekhun/Desktop/Dev/React/take-omok/client/src/components/InfoBar/InfoBar.js":"8","/Users/taekhun/Desktop/Dev/React/take-omok/client/src/components/Messages/Message/Message.js":"9"},{"size":197,"mtime":1612616819108,"results":"10","hashOfConfig":"11"},{"size":335,"mtime":1612616819106,"results":"12","hashOfConfig":"11"},{"size":1246,"mtime":1612616819107,"results":"13","hashOfConfig":"11"},{"size":6420,"mtime":1612700997387,"results":"14","hashOfConfig":"11"},{"size":1207,"mtime":1612616819107,"results":"15","hashOfConfig":"11"},{"size":559,"mtime":1612616819107,"results":"16","hashOfConfig":"11"},{"size":409,"mtime":1612616819108,"results":"17","hashOfConfig":"11"},{"size":833,"mtime":1612616819107,"results":"18","hashOfConfig":"11"},{"size":975,"mtime":1612616819108,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1bwxid8",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"/Users/taekhun/Desktop/Dev/React/take-omok/client/src/index.js",[],["42","43"],"/Users/taekhun/Desktop/Dev/React/take-omok/client/src/App.js",[],"/Users/taekhun/Desktop/Dev/React/take-omok/client/src/components/Home/Home.js",["44"],"import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./Home.css\";\n\nconst Home = () => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n\n  return (\n    <div className='homeOuterContainer'>\n      <div className='homeInnerContainer'>\n        <div className='titleBox'>\n          <div className='logoBox'>\n            <img className='logo' src='./baduk.jpg' />\n          </div>\n          <h1 className='heading'>Take-Omok</h1>\n        </div>\n        <div>\n          <input\n            placeholder='Name'\n            className='homeInput'\n            type='text'\n            onChange={(event) => setName(event.target.value)}\n          />\n        </div>\n        <div>\n          <input\n            placeholder='Room'\n            className='homeInput mt-20'\n            type='text'\n            onChange={(event) => setRoom(event.target.value)}\n          />\n        </div>\n        <Link\n          onClick={(e) => (!name || !room ? e.preventDefault() : null)}\n          to={`/play?name=${name}&room=${room}`}\n        >\n          <button className='button mt-20' type='submit'>\n            시작하기\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/taekhun/Desktop/Dev/React/take-omok/client/src/components/Play/Play.js",["45","46","47","48"],"import { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport \"./Play.css\";\n\nimport InfoBar from \"../InfoBar/InfoBar\";\nimport Messages from \"../Messages/Messages\";\nimport Board from \"../Board/Board\";\nimport Input from \"../Input/Input\";\nconst LINE_NUMBER = 15;\n\n// const ENDPOINT = \"take-omok.herokuapp.com\";\nconst DEV_ENDPOINT = \"localhost:5000\";\n\nlet socket;\n//Todo: socket\n\nconst Play = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [users, setUsers] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const [color, setColor] = useState(1); //1 : black,  2 : white\n  const [turn, setTurn] = useState(0); //0: Wait 1: black 2: white 3: end\n  let [array, setArray] = useState(\n    Array.from(Array(LINE_NUMBER), () => Array(LINE_NUMBER).fill(0))\n  );\n\n  //Render될 떄마다 표시\n  useEffect(() => {\n    const { name, room } = queryString.parse(location.search);\n    socket = io(DEV_ENDPOINT);\n    setRoom(room);\n    setName(name);\n\n    socket.emit(\"join\", { name, room }, (error) => {\n      if (error) {\n        alert(error);\n        history.push(\"/\");\n      }\n\n      // Game 종료\n      socket.on(\"broadcast\", (msg) => {\n        socket.emit(\"turnChange\", 3);\n        alert(msg);\n      });\n    });\n  }, [DEV_ENDPOINT, location.search]);\n\n  useEffect(() => {\n    socket.on(\"message\", (message) => {\n      setMessages((messages) => [...messages, message]);\n    });\n\n    socket.on(\"roomData\", ({ users }) => {\n      setUsers(users);\n    });\n\n    //돌 정하기\n    socket.on(\"color\", ({ color }) => {\n      setColor(color);\n    });\n\n    //TURN 초기화\n    socket.on(\"turn\", (turn) => {\n      setTurn(turn);\n    });\n\n    //Stone 좌표 얻어오기\n    socket.on(\"stoneID\", (id, color) => {\n      putStone(color, id);\n    });\n  }, []);\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\n    }\n  };\n\n  // 값 관리\n  const passValue = ({ target: { id } }) => {\n    //자기 순서 아닐 때 return\n    if (color !== turn) return;\n\n    const [M, N] = id.split(\"-\");\n    if (isValid([M, N]) === true) {\n      if (isFive([M, N]) === true) {\n        putStone(color, id);\n        socket.emit(\"gameover\", color);\n        socket.emit(\"turnChange\", turn);\n        socket.emit(\"passStone\", id, color);\n      } else if (isFive([M, N]) === 33) {\n        alert(\"쌍삼입니다.\");\n        return;\n      } else {\n        putStone(color, id);\n        turn === 1 ? setTurn(2) : setTurn(1);\n        socket.emit(\"turnChange\", turn === 1 ? 2 : 1);\n        socket.emit(\"passStone\", id, color);\n      }\n    }\n  };\n\n  //이미 존재하는지\n  const isValid = ([M, N]) => {\n    if (array[M][N] !== 0) {\n      alert(\"이미 존재하는 돌입니다.\");\n      return false;\n    }\n    return true;\n  };\n\n  //돌을 화면 위에 표시\n  const putStone = (color, id) => {\n    const [M, N] = id.split(\"-\");\n    array[M][N] = color;\n    const stone = document.getElementById(id);\n    stone.style.borderRadius = \"50%\";\n    stone.style.backgroundColor = color === 1 ? \"black\" : \"white\";\n  };\n\n  // 승리 판단\n  const isFive = ([M, N]) => {\n    M = Number(M);\n    N = Number(N);\n\n    let count = 1;\n    let SScount = 0;\n    let i = M;\n    let j = N;\n\n    // →\n    while (count < 6) {\n      if (j === 14) break;\n      else if (array[i][j + 1] === color) {\n        count += 1;\n        j += 1;\n      } else break;\n    }\n\n    // ←\n    i = M;\n    j = N;\n    while (count < 6) {\n      if (j === 0) break;\n      else if (array[i][j - 1] === color) {\n        count += 1;\n        j -= 1;\n      } else break;\n    }\n\n    if (count === 5) {\n      return true;\n    } else if (count === 3) {\n      SScount += 1;\n    }\n\n    if (SScount >= 2) {\n      return 33;\n    }\n\n    // ↓\n    count = 1;\n    i = M;\n    j = N;\n    while (count < 6) {\n      if (i === 0) break;\n      else if (array[i - 1][j] === color) {\n        count += 1;\n        i -= 1;\n      } else break;\n    }\n\n    // ↑\n    i = M;\n    j = N;\n    while (count < 6) {\n      if (i === 14) break;\n      else if (array[i + 1][j] === color) {\n        count += 1;\n        i += 1;\n      } else break;\n    }\n    if (count === 5) {\n      return true;\n    } else if (count === 3) {\n      SScount += 1;\n    }\n\n    if (SScount >= 2) {\n      return 33;\n    }\n\n    // ↙\n    count = 1;\n    i = M;\n    j = N;\n    while (count < 6) {\n      if (i === 14 || j === 0) break;\n      else if (array[i + 1][j - 1] === color) {\n        count = count + 1;\n        i += 1;\n        j -= 1;\n      } else break;\n    }\n\n    // ↗\n    i = M;\n    j = N;\n    while (count < 6) {\n      if (i === 0 || j === 14) break;\n      else if (array[i - 1][j + 1] === color) {\n        count = count + 1;\n        i -= 1;\n        j += 1;\n      } else break;\n    }\n\n    if (count === 5) {\n      return true;\n    } else if (count === 3) {\n      SScount += 1;\n    }\n\n    if (SScount >= 2) {\n      return 33;\n    }\n\n    // ↘\n    count = 1;\n    i = M;\n    j = N;\n    while (count < 6) {\n      if (i === 14 || j === 14) break;\n      else if (array[i + 1][j + 1] === color) {\n        count += 1;\n        i += 1;\n        j += 1;\n      } else break;\n    }\n\n    // ↖ 아래에 붙일 때\n    i = M;\n    j = N;\n    while (count < 6) {\n      if (i === 0 || j === 0) break;\n      else if (array[i - 1][j - 1] === color) {\n        count += 1;\n        i -= 1;\n        j -= 1;\n      } else break;\n    }\n\n    if (count === 5) {\n      return true;\n    } else if (count === 3) {\n      SScount += 1;\n    }\n\n    if (SScount >= 2) {\n      return 33;\n    }\n\n    return count === 5 ? true : false;\n  };\n\n  //Todo : 쌍삼\n  // const isSamSam = ([M, N]) => {};\n\n  return (\n    <div className='container'>\n      <div className='containerLeft'>\n        <InfoBar users={users} turn={turn} />\n        <div className='boardBox'>\n          <Board\n            array={array}\n            passValue={passValue}\n            color={color}\n            turn={turn}\n          />\n        </div>\n      </div>\n\n      <div className='chatBox'>\n        <Messages messages={messages} name={name} />\n        <Input\n          message={message}\n          setMessage={setMessage}\n          sendMessage={sendMessage}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Play;\n","/Users/taekhun/Desktop/Dev/React/take-omok/client/src/components/Board/Board.js",[],"/Users/taekhun/Desktop/Dev/React/take-omok/client/src/components/Input/Input.js",[],"/Users/taekhun/Desktop/Dev/React/take-omok/client/src/components/Messages/Messages.js",[],"/Users/taekhun/Desktop/Dev/React/take-omok/client/src/components/InfoBar/InfoBar.js",[],"/Users/taekhun/Desktop/Dev/React/take-omok/client/src/components/Messages/Message/Message.js",[],["49","50"],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":15,"column":13,"nodeType":"57","endLine":15,"endColumn":55},{"ruleId":"58","severity":1,"message":"59","line":20,"column":10,"nodeType":"60","messageId":"61","endLine":20,"endColumn":14},{"ruleId":"58","severity":1,"message":"62","line":27,"column":15,"nodeType":"60","messageId":"61","endLine":27,"endColumn":23},{"ruleId":"63","severity":1,"message":"64","line":50,"column":6,"nodeType":"65","endLine":50,"endColumn":37,"suggestions":"66"},{"ruleId":"63","severity":1,"message":"67","line":75,"column":6,"nodeType":"65","endLine":75,"endColumn":8,"suggestions":"68"},{"ruleId":"51","replacedBy":"69"},{"ruleId":"53","replacedBy":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'room' is assigned a value but never used.","Identifier","unusedVar","'setArray' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array. Outer scope values like 'DEV_ENDPOINT' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["73"],"React Hook useEffect has a missing dependency: 'putStone'. Either include it or remove the dependency array.",["74"],["71"],["72"],"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},"Update the dependencies array to be: [history, location.search]",{"range":"79","text":"80"},"Update the dependencies array to be: [putStone]",{"range":"81","text":"82"},[1390,1421],"[history, location.search]",[1891,1893],"[putStone]"]